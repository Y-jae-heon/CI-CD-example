name: Create and Upload IOS on TESTFlight

on:
  push:
    branches:
      - 'develop'
    tags:
      - 'ios-v*.*.*'

jobs:
  CI-Develop:
    name: iOS uploading on TESTFlight
    runs-on: macos-latest
    # Tag가 있을 시에만 실행
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      # Step 1 Checkout Repo
      - name: Checkout repository
        uses: actions/checkout@v2

      - uses: egordm/gha-yarn-node-cache@v1

      # Install SSH Key
      # - name: Install SSH Key
      #   uses: shimataro/ssh-key-action@v2
      #   with:
      #     key: ${{ secrets.SSH_KEY }}
      #     known_hosts: ${{ secrets.KNOWN_HOSTS }}

      # Step 6 Setup Ruby
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          working-directory: 'ios'
          bundler-cache: true

      # Step 2 Get Version Name
      - name: Extract Version from Tag
        run: echo "VERSION=$(echo ${{ github.ref }} | sed -n 's/^refs\/tags\/ios-v\([0-9]*\.[0-9]*\.[0-9]*\)/\1/p')" >> $GITHUB_ENV

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      # Step 3 Npm Cache
      - name: Cache node_modules
        id: yarn-cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Cache Pod install
        uses: actions/cache@v3
        with:
          path: |
            /ios/Pods
            ~/Library/Caches/CocoaPods
            ~/.cocoapods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      # Step 4 Setup Node
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: yarn

      # Step 5 Install Dependencies npm install
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install

      # Step 7 Upload Apk
      - name: Upload IOS to TESTFlight
        run: |
          cd ios && bundle exec fastlane beta version:${{ env.VERSION }}
        env:
          FL_ENV: development
          MATCH_KEYCHAIN_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}

      - name: Commit Git Config Set
        run: |
          git config --local user.email "yourEmail"
          git config --local user.name "workflow"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
      - name: Actions Slack Message
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: Github Action Android Develop Apk Uploading # default: 8398a7@action-slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
